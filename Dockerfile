FROM instructure/tini:latest as tini

#Download base image ubuntu 20.04
FROM ubuntu:20.04

# LABEL about the custom image
LABEL maintainer="mchristopher"
LABEL version="0.1"
LABEL description="This is custom Docker Image for Canvas LMS."

# Get rid of the ugly errors
ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get update -qq \
  && apt-get install -qqy --no-install-recommends \
       gnupg2 \
       dirmngr \
       curl \
       wget \
       file \
       locales \
       software-properties-common apt-transport-https ca-certificates \
  && curl -sL https://deb.nodesource.com/setup_14.x | bash - \
  && curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \
  && echo "deb https://dl.yarnpkg.com/debian/ stable main" > /etc/apt/sources.list.d/yarn.list \
  && echo "deb https://oss-binaries.phusionpassenger.com/apt/passenger focal main" > /etc/apt/sources.list.d/passenger.list \
  && printf 'path-exclude /usr/share/doc/*\npath-exclude /usr/share/man/*' > /etc/dpkg/dpkg.cfg.d/01_nodoc \
  && apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 561F9B9CAC40B2F7 \
  && apt-get update -qq \
  && apt-get install -qqy --no-install-recommends \
       nodejs \
       yarn=1.19.1-1 \
       libxmlsec1-dev \
       libapache2-mod-passenger apache2 python \
       python-lxml \
       libicu-dev \
       autoconf \
       git-core \
       automake \
       passenger \
  && add-apt-repository ppa:brightbox/ruby-ng \
  && apt-get update -qq \
  && apt-get install -y --no-install-recommends ruby2.6 ruby2.6-dev zlib1g-dev libxml2-dev \
          libsqlite3-dev libpq-dev \
          libxmlsec1-dev make g++ \
  && a2enmod rewrite && a2enmod passenger && a2enmod ssl \
  && apt-get clean && rm -rf /var/lib/apt/lists/*

ENV LANG en_US.UTF-8
ENV LANGUAGE en_US:en
ENV LC_ALL en_US.UTF-8

RUN locale-gen en_US.UTF-8 && \
    dpkg-reconfigure locales

COPY --from=tini /tini /tini

# install pulsar stuff
ENV PULSAR_VERSION=2.6.1
ENV PULSAR_CLIENT_SHA512=90fdb6e3ad85c9204f2b20a9077684f667f84be32df0952f8823ccee501c9d64a4c8131cab38a295a4cb66e2b63211afcc24f32130ded47e9da8f334ec6053f5
ENV PULSAR_CLIENT_DEV_SHA512=d0cc58c0032cb35d4325769ab35018b5ed823bc9294d75edfb56e62a96861be4194d6546107af0d5f541a778cdc26274aac9cb7b5ced110521467f89696b2209
# pulsar installs 4 versions of this library, but we only need
# one, so at the end we remove the others to minimize the image size
RUN cd "$(mktemp -d)" && \
    curl -SLO 'http://archive.apache.org/dist/pulsar/pulsar-'$PULSAR_VERSION'/DEB/apache-pulsar-client.deb' && \
    curl -SLO 'http://archive.apache.org/dist/pulsar/pulsar-'$PULSAR_VERSION'/DEB/apache-pulsar-client-dev.deb' && \
    echo $PULSAR_CLIENT_SHA512 '*apache-pulsar-client.deb' | shasum -a 512 -c -s - && \
    echo $PULSAR_CLIENT_DEV_SHA512 '*apache-pulsar-client-dev.deb' | shasum -a 512 -c -s - && \
    apt install ./apache-pulsar-client*.deb && \
    rm ./apache-pulsar-client*.deb && \
    rm /usr/lib/libpulsarnossl.so* && \
    rm /usr/lib/libpulsar.a && \
    rm /usr/lib/libpulsarwithdeps.a

# Get git-core, download Canvas and install
USER root

ENV CANVAS_BUILD_CONCURRENCY=1
ENV RAILS_ENV=production

RUN cd /var \
    && git clone --depth=1 --branch stable https://github.com/instructure/canvas-lms.git canvas \
    && rm -fr canvas/.git
WORKDIR /var/canvas

# Install Bundler
RUN gem install bundler --version 2.2.11

# Setup automation jobs
RUN ln -s /var/canvas/script/canvas_init /etc/init.d/canvas_init
RUN update-rc.d canvas_init defaults

# Copy the sample config files
RUN for config in delayed_jobs outgoing_mail external_migration; \
    do cp config/$config.yml.example config/$config.yml; done

COPY ./config/amazon_s3.yml /var/canvas/config/amazon_s3.yml
COPY ./config/cache_store.yml /var/canvas/config/cache_store.yml
COPY ./config/database.yml /var/canvas/config/database.yml
COPY ./config/domain.yml /var/canvas/config/domain.yml
COPY ./config/file_store.yml /var/canvas/config/file_store.yml
COPY ./config/redis.yml /var/canvas/config/redis.yml
COPY ./config/security.yml /var/canvas/config/security.yml
COPY ./config/outgoing_mail.yml /var/canvas/config/outgoing_mail.yml

# Create all Canvas required assets
RUN mkdir -p log tmp/pids public/assets app/stylesheets/brandable_css_brands && \
    touch app/stylesheets/_brandable_variables_defaults_autogenerated.scss && \
    touch Gemfile.lock && \
    touch log/production.log

RUN adduser --disabled-password --gecos canvas canvasuser

RUN chown -R canvasuser config/environment.rb log tmp public/assets \
    app/stylesheets/_brandable_variables_defaults_autogenerated.scss \
    app/stylesheets/brandable_css_brands Gemfile.lock config.ru

RUN bundle _2.2.11_ install --path vendor/bundle \
    && yarn install \
    && bundle exec rake --trace canvas:compile_assets \
    && bundle install --without test development \
    && bundle clean --force \
    && chown -R canvasuser public/dist/brandable_css \
    && unlink /etc/apache2/sites-enabled/000-default.conf \
    && chown canvasuser config/*.yml \
    && chmod 400 config/*.yml \
  \
  # now some cleanup... \
  && rm -rf \
    /root/.bundle/cache \
    /var/lib/gems/2.6.0/cache \
    /var/lib/gems/2.6.0/bundler/gems/*/{.git,spec,test,features} \
    /var/lib/gems/2.6.0/gems/*/{spec,test,features} \
    /root/.gem/cache \
    /root/.gem/bundler/gems/*/{.git,spec,test,features} \
    /root/.gem/gems/*/{spec,test,features} \
    `yarn cache dir` \
    /root/.node-gyp \
    /tmp/phantomjs \
    .yardoc \
    config/locales/generated \
    gems/*/node_modules \
    gems/plugins/*/node_modules \
    log \
    public/dist/maps \
    public/doc/api/*.json \
    public/javascripts/translations \
    tmp-*.tmp \
  && mkdir -p log \
  && touch log/production.log

# Make logs writable
RUN rm -fr log \
  && mkdir -p log \
  && chmod 777 log

# Expose HTTP port
EXPOSE 80

COPY ./config/canvas_no_ssl.conf /etc/apache2/sites-enabled/canvas.conf
COPY ./start.sh /var/canvas/start.sh
RUN chmod +x /var/canvas/start.sh

ENTRYPOINT ["/tini", "--"]
CMD ["/var/canvas/start.sh"]
